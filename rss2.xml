<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PokerDealer&#39;s Club</title>
    <link>https://brutalmraz.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Talk is Cheap, show me your bug.</description>
    <pubDate>Mon, 09 Jul 2018 15:09:46 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>在centOS7上安装mysql5.6</title>
      <link>https://brutalmraz.github.io/2018/07/09/%E5%9C%A8centOS7%E4%B8%8A%E5%AE%89%E8%A3%85mysql5-6/</link>
      <guid>https://brutalmraz.github.io/2018/07/09/%E5%9C%A8centOS7%E4%B8%8A%E5%AE%89%E8%A3%85mysql5-6/</guid>
      <pubDate>Mon, 09 Jul 2018 14:43:28 GMT</pubDate>
      <description>
      
        
        
          
          
            &lt;h1 id=&quot;一、安装MySQL&quot;&gt;&lt;a href=&quot;#一、安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;一、安装MySQL&quot;&gt;&lt;/a&gt;一、安装MySQL&lt;/h1&gt;&lt;p&gt;1、下载安装包mysql-5.6.34-&lt;a
          
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="一、安装MySQL"><a href="#一、安装MySQL" class="headerlink" title="一、安装MySQL"></a>一、安装MySQL</h1><p>1、下载安装包mysql-5.6.34-<a href="http://lib.csdn.net/base/linux" target="_blank" rel="noopener">linux</a>-glibc2.5-x86_64.tar（可前往官网自行下载：<a href="http://dev.mysql.com/downloads/mysql/%EF%BC%89" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/）</a></p><p>2、卸载系统自带的Mariadb</p><p>打开Terminal终端：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="meta"># rpm -qa|grep mariadb  <span class="comment">// 查询出来已安装的mariadb</span></span></span><br><span class="line">[root@localhost ~]<span class="meta"># rpm -e --nodeps 文件名  <span class="comment">// 卸载mariadb，文件名为上述命令查询出来的文件</span></span></span><br></pre></td></tr></table></figure><p>3、删除etc目录下的my.cnf</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># rm /etc/my.cnf</span></span><br></pre></td></tr></table></figure><p>4、执行以下命令来创建mysql用户组</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># groupadd mysql</span></span><br></pre></td></tr></table></figure><p>5、执行以下命令来创建一个用户名为mysql的用户并加入mysql用户组</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># useradd -g mysql mysql</span></span><br></pre></td></tr></table></figure><p>6、将下载的压缩包放到 /usr/local/ 目录下（通过mv 要移动的文件  /usr/local/）</p><p>7、解压安装包</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost ~]</span># <span class="selector-tag">tar</span> <span class="selector-tag">-xvf</span> <span class="selector-tag">mysql-5</span><span class="selector-class">.6</span><span class="selector-class">.34-linux-glibc2</span><span class="selector-class">.5-x86_64</span><span class="selector-class">.tar</span></span><br></pre></td></tr></table></figure><p>注：如果压缩包为：mysql-5.6.34-linux-glibc2.5-x86_64.tar.gz，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">则解压命令为: <span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">mysql-5</span><span class="selector-class">.6</span><span class="selector-class">.34-linux-glibc2</span><span class="selector-class">.5-x86_64</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>8、将解压好的文件夹重命名为mysql</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> <span class="keyword">local</span>]<span class="meta"># mv 解压出来的文件夹名 mysql</span></span><br></pre></td></tr></table></figure><p>9、在 etc 下新建配置文件my.cnf，并在该文件中添加一下代码：</p><p>当然，也有简单方式：直接copy一份my.cnf文件到/etc下，然后再修改即可。</p><p>e g：copy一份/usr/local/mysql/support-files/下的my-default.cnf文件到/etc下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令为：[root@localhost support-<span class="keyword">files</span>]# <span class="keyword">cp</span> my-default.<span class="keyword">cnf</span> /etc/my.<span class="keyword">cnf</span></span><br></pre></td></tr></table></figure><p>然后，配置/etc目录下的my.cnf文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost support-<span class="keyword">files</span>]# <span class="keyword">vim</span> /etc/my.<span class="keyword">cnf</span></span><br></pre></td></tr></table></figure><p>通过vim编辑器编辑my.cnf代码如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attribute">default-character-set</span>=utf8 </span><br><span class="line"><span class="attribute">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line">port = 3306 </span><br><span class="line"><span class="attribute">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attribute">basedir</span>=/usr/local/mysql</span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attribute">datadir</span>=/usr/local/mysql/data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attribute">max_connections</span>=200</span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="attribute">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attribute">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="attribute">lower_case_table_name</span>=1</span><br><span class="line"><span class="attribute">max_allowed_packet</span>=16M</span><br></pre></td></tr></table></figure><p>10、进入安装mysql软件目录</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># cd /usr/local/mysql</span></span><br><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># chown -R mysql:mysql ./       修改当前目录拥有着为mysql用户</span></span><br><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># ./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/ 安装数据库</span></span><br></pre></td></tr></table></figure><p>注：若执行以上最后一个命令出现以下问题：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FATAL <span class="string">ERROR:</span> please install the following Perl modules before executing </span><br><span class="line">.<span class="regexp">/scripts/</span><span class="string">mysql_install_db:</span><span class="string">Data:</span>:Dumper</span><br></pre></td></tr></table></figure><p>解决方法 ：安装autoconf库  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令: yum -y <span class="keyword">install</span> autoconf   //此包安装时会安装<span class="keyword">Data</span>:Dumper模块</span><br><span class="line">安装完成重新执行上述最后一个命令</span><br></pre></td></tr></table></figure><p>重新回到上述第三个命令继续操作：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql]# chown -<span class="type">R</span> mysql:mysql <span class="class"><span class="keyword">data</span> 修改当前<span class="keyword">data</span>目录的拥有者为mysql用户</span></span><br></pre></td></tr></table></figure><p>到此数据库安装完毕！</p><h1 id="二、配置MySQL"><a href="#二、配置MySQL" class="headerlink" title="二、配置MySQL"></a>二、配置MySQL</h1><p>1、授予my.cnf最大权限</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># chown 777 /etc/my.cnf</span></span><br></pre></td></tr></table></figure><p>设置开机自启动服务控制脚本：</p><p>2、复制启动脚本到资源目录</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql]# cp .<span class="regexp">/support-files/my</span>sql.server <span class="regexp">/etc/</span>rc.d<span class="regexp">/init.d/my</span>sqld</span><br></pre></td></tr></table></figure><p>3、增加mysqld服务控制脚本执行权限</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># chmod +x /etc/rc.d/init.d/mysqld</span></span><br></pre></td></tr></table></figure><p>4、将mysqld服务加入到系统服务</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># chkconfig --add mysqld</span></span><br></pre></td></tr></table></figure><p>5、检查mysqld服务是否已经生效</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># chkconfig --list mysqld</span></span><br></pre></td></tr></table></figure><p>命令输出类似下面的结果:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="number">0</span>:off <span class="number">1</span>:off <span class="number">2</span>:<span class="keyword">on</span> <span class="number">3</span>:<span class="keyword">on</span> <span class="number">4</span>:<span class="keyword">on</span> <span class="number">5</span>:<span class="keyword">on</span> <span class="number">6</span>:off</span><br></pre></td></tr></table></figure><p>表明mysqld服务已经生效，在2、3、4、5运行级别随系统启动而自动启动，以后可以使用service命令控制mysql的启动和停止</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令为:service mysqld <span class="literal">start</span>和service mysqld <span class="literal">stop</span></span><br></pre></td></tr></table></figure><p>6、启动mysqld</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql]#<span class="built_in"> service </span>mysqld start</span><br></pre></td></tr></table></figure><p>7、将mysql的bin目录加入PATH环境变量，编辑 ~/.bash_profile文件</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># vim ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>在文件最后添加如下信息:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/usr/local/mysql/bin</span></span><br></pre></td></tr></table></figure><p>然后按ESC键</p><p>继续 shift键加冒号打出来=&gt;  ：</p><p>接下来输入wq回车即可</p><p>执行下面的命令是修改的内容立即生效:</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># source ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>8、以root账户登录mysql,默认是没有密码的</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> mysql]<span class="meta"># mysql -uroot -p</span></span><br></pre></td></tr></table></figure><p>要输入密码的时候直接回车即可。</p><p>9、设置root账户密码为root（也可以修改成你要的密码）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;use mysql</span><br><span class="line">mysql&gt;update<span class="built_in"> user </span><span class="builtin-name">set</span> <span class="attribute">password</span>=password('root') where <span class="attribute">user</span>=<span class="string">'root'</span> <span class="keyword">and</span> <span class="attribute">host</span>=<span class="string">'localhost'</span>;</span><br><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure><p>10、设置远程主机登录，注意下面的your username 和 your password改成你需要设置的用户和密码</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;GRANT <span class="literal">ALL</span> PRIVILEGES <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'your username'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'your password'</span> <span class="keyword">WITH</span></span><br><span class="line">GRANT OPTION;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://brutalmraz.github.io/2018/07/09/%E5%9C%A8centOS7%E4%B8%8A%E5%AE%89%E8%A3%85mysql5-6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo搭建个人博客（基础篇）</title>
      <link>https://brutalmraz.github.io/2018/07/08/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/</link>
      <guid>https://brutalmraz.github.io/2018/07/08/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/</guid>
      <pubDate>Sat, 07 Jul 2018 16:54:36 GMT</pubDate>
      <description>
      
        
        
          
          
            &lt;h1 id=&quot;Pre&quot;&gt;&lt;a href=&quot;#Pre&quot; class=&quot;headerlink&quot; title=&quot;Pre&quot;&gt;&lt;/a&gt;Pre&lt;/h1&gt;&lt;p&gt;As a
          
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Pre"><a href="#Pre" class="headerlink" title="Pre"></a>Pre</h1><p>As a developer,保持良好的写作和记录习惯是hin重要的。个人博客一种不错的形式。考虑到国内很多技术社区博客页面确实太老旧，太TM丑了，因此，开源个人博客服务开始流行起来，如  「wordpress 」,「hexo」 ,「jekyII 」等。</p><p>本文将基于「github pages+hexo」的技术方案来介绍，如何从零开始搭建个人博客。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="Node-js-的安装"><a href="#Node-js-的安装" class="headerlink" title="Node.js 的安装"></a>Node.js 的安装</h3><p> 如果你是Mac 用户，建议使用nvm或brew 进行安装管理。 当然也可以访问<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js官网</a>  ，下载Node.js的安装包，自行安装好环境，做好配置。 这里就不一一赘述，应该难不倒作为程序员的你。</p><h3 id="Git-的安装"><a href="#Git-的安装" class="headerlink" title="Git 的安装"></a>Git 的安装</h3><p>这里就不一一赘述， 别说你没装。 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网</a></p><h3 id="hexo的安装"><a href="#hexo的安装" class="headerlink" title="hexo的安装"></a>hexo的安装</h3><p>请事先确认npm 命令可用，若不可用，请检查Node.js的环境变量是否已经正确配置。</p><p>确认命令可用后：</p><p>Mac 用户打开终端，运行</p><p><code>$ npm install hexo-cli -g</code></p><p>Windows 用户打开cmd 运行</p><p><code>$ npm install hexo-cli -g</code></p><p>这一步可能需要翻墙，所以没有梯子的同学，可以切换至淘宝镜像<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a> ，再执行以上命令。 </p><h2 id="初始设置"><a href="#初始设置" class="headerlink" title="初始设置"></a>初始设置</h2><h3 id="hexo创建目录"><a href="#hexo创建目录" class="headerlink" title="hexo创建目录"></a>hexo创建目录</h3><p>执行以下命令，hexo 将会在当前路径创建一个blog文件夹，这个文件夹将是你的个人博客的主要工作空间。 </p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">hexo</span> init <span class="keyword">blog</span></span><br><span class="line"><span class="keyword">cd </span><span class="keyword">blog</span></span><br><span class="line"><span class="keyword">npm </span>install</span><br></pre></td></tr></table></figure><h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p><code>$ hexo g</code></p><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><p><code>$ hexo s</code></p><h3 id="Have-a-look"><a href="#Have-a-look" class="headerlink" title="Have a look."></a>Have a look.</h3><p>打开浏览器 访问<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> </p><p>你会发现，博客已经初始化完成，初始版本是 landscape 皮肤， 略丑。不用担心，后续你可以进行一系列强大的个性化定制。</p><h2 id="几个常用的hexo-命令"><a href="#几个常用的hexo-命令" class="headerlink" title="几个常用的hexo 命令"></a>几个常用的hexo 命令</h2><ul><li><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- hexo generate (hexo g)     生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span><br><span class="line">- hexo<span class="built_in"> server </span>(hexo s)         启动本地web服务，用于博客的预览</span><br><span class="line">- hexo deploy (hexo d)        部署博客到远端（比如github, heroku等平台）</span><br><span class="line">- hexo new “postName”    #新建文章</span><br><span class="line">- hexo new<span class="built_in"> page </span>“pageName”   #新建页面</span><br></pre></td></tr></table></figure></li></ul><h2 id="发布你的第一篇文章"><a href="#发布你的第一篇文章" class="headerlink" title="发布你的第一篇文章"></a>发布你的第一篇文章</h2><h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><p>在终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page “helloword”</span><br></pre></td></tr></table></figure><p>此时在source/_posts 文件夹下将会生成一个helloword.md 文件，请使用markdown语言编辑文件内容。  </p><h3 id="生成预览"><a href="#生成预览" class="headerlink" title="生成预览"></a>生成预览</h3><p>编辑完毕后在终端输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure><p>hexo 会在本地进行静态页面文件的生成，此时你可以执行hexo s 部署本地服务， 访问<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>   进行预览</p><h3 id="部署到远端"><a href="#部署到远端" class="headerlink" title="部署到远端"></a>部署到远端</h3><p>本文的远程部署方案是与github pages 服务结合。</p><h4 id="1st"><a href="#1st" class="headerlink" title="1st:"></a>1st:</h4><p> 你需要创建一个$username.github.io 的github仓库， 其中$username= 你的GitHub昵称</p><p>不能有一字之差， 否则将无法启用Github pages 服务。</p><h4 id="2nd"><a href="#2nd" class="headerlink" title="2nd:"></a>2nd:</h4><p> 安装hexo 远程部署插件</p><p> 运行命令</p><p><code>$ npm install hexo-deployer-git --save</code></p><h4 id="3rd"><a href="#3rd" class="headerlink" title="3rd:"></a>3rd:</h4><p>在全局配置文件_config.yml中 配置参数deploy</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><h4 id="4th"><a href="#4th" class="headerlink" title="4th:"></a>4th:</h4><p>执行hexo g  生成静态文件</p><p>执行hexo d  进行远程部署</p><h4 id="5th"><a href="#5th" class="headerlink" title="5th:"></a>5th:</h4><p>访问<a href="https://username.github.io" target="_blank" rel="noopener">https://username.github.io</a> </p><p>就可以看到你的博客主页啦。</p><p>至此， 个人博客的基础搭建已经完成。</p><p>hexo+github pages 博客进阶技巧，请关注后续文章。</p>]]></content:encoded>
      
      <comments>https://brutalmraz.github.io/2018/07/08/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
