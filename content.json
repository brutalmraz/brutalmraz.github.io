{"meta":{"title":"PokerDealer's Club","subtitle":"年轻人，你的思想很危险。","description":"Talk is Cheap, show me your bug.","author":"PokerBean","url":"https://brutalmraz.github.io"},"pages":[{"title":"","date":"2018-07-09T15:49:07.089Z","updated":"2018-07-09T15:48:12.547Z","comments":true,"path":"google760f2fc1d612d305.html","permalink":"https://brutalmraz.github.io/google760f2fc1d612d305.html","excerpt":"","text":"google-site-verification: google760f2fc1d612d305.html"},{"title":"关于本人","date":"2018-07-05T02:05:37.000Z","updated":"2018-07-05T02:06:19.739Z","comments":true,"path":"about/index.html","permalink":"https://brutalmraz.github.io/about/index.html","excerpt":"","text":"嘿嘿嘿"},{"title":"文章分类","date":"2018-07-05T02:01:46.000Z","updated":"2018-07-05T06:15:09.717Z","comments":false,"path":"categories/index.html","permalink":"https://brutalmraz.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-07-09T15:02:31.000Z","updated":"2018-07-09T15:08:13.973Z","comments":false,"path":"tags/index.html","permalink":"https://brutalmraz.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"在centOS7上安装mysql5.6","slug":"在centOS7上安装mysql5-6","date":"2018-07-09T14:43:28.000Z","updated":"2018-07-09T15:09:46.793Z","comments":true,"path":"2018/07/09/在centOS7上安装mysql5-6/","link":"","permalink":"https://brutalmraz.github.io/2018/07/09/在centOS7上安装mysql5-6/","excerpt":"","text":"一、安装MySQL1、下载安装包mysql-5.6.34-linux-glibc2.5-x86_64.tar（可前往官网自行下载：http://dev.mysql.com/downloads/mysql/） 2、卸载系统自带的Mariadb 打开Terminal终端： 12[root@localhost ~]# rpm -qa|grep mariadb // 查询出来已安装的mariadb[root@localhost ~]# rpm -e --nodeps 文件名 // 卸载mariadb，文件名为上述命令查询出来的文件 3、删除etc目录下的my.cnf 1[root@localhost ~]# rm /etc/my.cnf 4、执行以下命令来创建mysql用户组 1[root@localhost ~]# groupadd mysql 5、执行以下命令来创建一个用户名为mysql的用户并加入mysql用户组 1[root@localhost ~]# useradd -g mysql mysql 6、将下载的压缩包放到 /usr/local/ 目录下（通过mv 要移动的文件 /usr/local/） 7、解压安装包 1[root@localhost ~]# tar -xvf mysql-5.6.34-linux-glibc2.5-x86_64.tar 注：如果压缩包为：mysql-5.6.34-linux-glibc2.5-x86_64.tar.gz， 1则解压命令为: tar -zxvf mysql-5.6.34-linux-glibc2.5-x86_64.tar.gz 8、将解压好的文件夹重命名为mysql 1[root@localhost local]# mv 解压出来的文件夹名 mysql 9、在 etc 下新建配置文件my.cnf，并在该文件中添加一下代码： 当然，也有简单方式：直接copy一份my.cnf文件到/etc下，然后再修改即可。 e g：copy一份/usr/local/mysql/support-files/下的my-default.cnf文件到/etc下 1命令为：[root@localhost support-files]# cp my-default.cnf /etc/my.cnf 然后，配置/etc目录下的my.cnf文件 1[root@localhost support-files]# vim /etc/my.cnf 通过vim编辑器编辑my.cnf代码如下： 12345678910111213141516171819202122[mysql]# 设置mysql客户端默认字符集default-character-set=utf8 socket=/var/lib/mysql/mysql.sock[mysqld]skip-name-resolve#设置3306端口port = 3306 socket=/var/lib/mysql/mysql.sock# 设置mysql的安装目录basedir=/usr/local/mysql# 设置mysql数据库的数据的存放目录datadir=/usr/local/mysql/data# 允许最大连接数max_connections=200# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODBlower_case_table_name=1max_allowed_packet=16M 10、进入安装mysql软件目录 123[root@localhost ~]# cd /usr/local/mysql[root@localhost mysql]# chown -R mysql:mysql ./ 修改当前目录拥有着为mysql用户[root@localhost mysql]# ./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/ 安装数据库 注：若执行以上最后一个命令出现以下问题： 12FATAL ERROR: please install the following Perl modules before executing ./scripts/mysql_install_db:Data::Dumper 解决方法 ：安装autoconf库 12命令: yum -y install autoconf //此包安装时会安装Data:Dumper模块安装完成重新执行上述最后一个命令 重新回到上述第三个命令继续操作： 1[root@localhost mysql]# chown -R mysql:mysql data 修改当前data目录的拥有者为mysql用户 到此数据库安装完毕！ 二、配置MySQL1、授予my.cnf最大权限 1[root@localhost ~]# chown 777 /etc/my.cnf 设置开机自启动服务控制脚本： 2、复制启动脚本到资源目录 1[root@localhost mysql]# cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld 3、增加mysqld服务控制脚本执行权限 1[root@localhost mysql]# chmod +x /etc/rc.d/init.d/mysqld 4、将mysqld服务加入到系统服务 1[root@localhost mysql]# chkconfig --add mysqld 5、检查mysqld服务是否已经生效 1[root@localhost mysql]# chkconfig --list mysqld 命令输出类似下面的结果: 1mysqld 0:off 1:off 2:on 3:on 4:on 5:on 6:off 表明mysqld服务已经生效，在2、3、4、5运行级别随系统启动而自动启动，以后可以使用service命令控制mysql的启动和停止 1命令为:service mysqld start和service mysqld stop 6、启动mysqld 1[root@localhost mysql]# service mysqld start 7、将mysql的bin目录加入PATH环境变量，编辑 ~/.bash_profile文件 1[root@localhost mysql]# vim ~/.bash_profile 在文件最后添加如下信息: 1export PATH=$PATH:/usr/local/mysql/bin 然后按ESC键 继续 shift键加冒号打出来=&gt; ： 接下来输入wq回车即可 执行下面的命令是修改的内容立即生效: 1[root@localhost mysql]# source ~/.bash_profile 8、以root账户登录mysql,默认是没有密码的 1[root@localhost mysql]# mysql -uroot -p 要输入密码的时候直接回车即可。 9、设置root账户密码为root（也可以修改成你要的密码） 123mysql&gt;use mysqlmysql&gt;update user set password=password('root') where user='root' and host='localhost';mysql&gt;flush privileges; 10、设置远程主机登录，注意下面的your username 和 your password改成你需要设置的用户和密码 12mysql&gt;GRANT ALL PRIVILEGES ON *.* TO 'your username'@'%' IDENTIFIED BY 'your password' WITHGRANT OPTION;","categories":[{"name":"mysql","slug":"mysql","permalink":"https://brutalmraz.github.io/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://brutalmraz.github.io/tags/mysql/"}]},{"title":"hexo搭建个人博客（基础篇）","slug":"使用hexo搭建个人博客（一）","date":"2018-07-07T16:54:36.000Z","updated":"2018-07-09T15:09:56.880Z","comments":true,"path":"2018/07/08/使用hexo搭建个人博客（一）/","link":"","permalink":"https://brutalmraz.github.io/2018/07/08/使用hexo搭建个人博客（一）/","excerpt":"","text":"PreAs a developer,保持良好的写作和记录习惯是hin重要的。个人博客一种不错的形式。考虑到国内很多技术社区博客页面确实太老旧，太TM丑了，因此，开源个人博客服务开始流行起来，如 「wordpress 」,「hexo」 ,「jekyII 」等。 本文将基于「github pages+hexo」的技术方案来介绍，如何从零开始搭建个人博客。 正文环境安装Node.js 的安装 如果你是Mac 用户，建议使用nvm或brew 进行安装管理。 当然也可以访问Node.js官网 ，下载Node.js的安装包，自行安装好环境，做好配置。 这里就不一一赘述，应该难不倒作为程序员的你。 Git 的安装这里就不一一赘述， 别说你没装。 Git官网 hexo的安装请事先确认npm 命令可用，若不可用，请检查Node.js的环境变量是否已经正确配置。 确认命令可用后： Mac 用户打开终端，运行 $ npm install hexo-cli -g Windows 用户打开cmd 运行 $ npm install hexo-cli -g 这一步可能需要翻墙，所以没有梯子的同学，可以切换至淘宝镜像http://npm.taobao.org/ ，再执行以上命令。 初始设置hexo创建目录执行以下命令，hexo 将会在当前路径创建一个blog文件夹，这个文件夹将是你的个人博客的主要工作空间。 123hexo init blogcd blognpm install 生成静态页面$ hexo g 本地运行$ hexo s Have a look.打开浏览器 访问http://localhost:4000/ 你会发现，博客已经初始化完成，初始版本是 landscape 皮肤， 略丑。不用担心，后续你可以进行一系列强大的个性化定制。 几个常用的hexo 命令 12345- hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹- hexo server (hexo s) 启动本地web服务，用于博客的预览- hexo deploy (hexo d) 部署博客到远端（比如github, heroku等平台）- hexo new “postName” #新建文章- hexo new page “pageName” #新建页面 发布你的第一篇文章新建文件在终端输入 1hexo new page “helloword” 此时在source/_posts 文件夹下将会生成一个helloword.md 文件，请使用markdown语言编辑文件内容。 生成预览编辑完毕后在终端输入 1hexo g hexo 会在本地进行静态页面文件的生成，此时你可以执行hexo s 部署本地服务， 访问http://localhost:4000/ 进行预览 部署到远端本文的远程部署方案是与github pages 服务结合。 1st: 你需要创建一个$username.github.io 的github仓库， 其中$username= 你的GitHub昵称 不能有一字之差， 否则将无法启用Github pages 服务。 2nd: 安装hexo 远程部署插件 运行命令 $ npm install hexo-deployer-git --save 3rd:在全局配置文件_config.yml中 配置参数deploy 1234deploy: type: git repo: https://github.com/username/username.github.io.git branch: master 4th:执行hexo g 生成静态文件 执行hexo d 进行远程部署 5th:访问https://username.github.io 就可以看到你的博客主页啦。 至此， 个人博客的基础搭建已经完成。 hexo+github pages 博客进阶技巧，请关注后续文章。","categories":[{"name":"blog","slug":"blog","permalink":"https://brutalmraz.github.io/categories/blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://brutalmraz.github.io/tags/hexo/"}]}]}